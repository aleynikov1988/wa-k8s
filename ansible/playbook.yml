---
- hosts: k8s
  become: true
  vars_files:
    - vars.yml
  strategy: free
  roles:
    - geerlingguy.containerd

  tasks:
    - name: "Install packages"
      ansible.builtin.yum:
        name: "{{ item }}"
      with_items: "{{ packages }}"

    - name: "Disable swap"
      ansible.builtin.command: "swapoff -a"
      when: ansible_swaptotal_mb > 0

    - name: "Disable Firewalld"
      ansible.builtin.service:
        name: firewalld
        state: stopped

    - name: "Disable SELinux"
      ansible.posix.selinux:
        state: disabled

    - name: "Put SELinux in permissive mode"
      ansible.posix.selinux:
        policy: targeted
        state: permissive

    - name: "Enable module: overlay"
      community.general.modprobe:
        name: overlay
        state: present

    - name: "Enable module: br_netfilter"
      community.general.modprobe:
        name: br_netfilter
        state: present

    # https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/install-kubeadm/#letting-iptables-see-bridged-traffic
    # - name: "Make iptables see bridged traffic"
    #   ansible.builtin.shell: |
    #     cat <<EOF | sudo tee /etc/modules-load.d/k8s.conf
    #     br_netfilter
    #     EOF

    #     cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf
    #     net.bridge.bridge-nf-call-ip6tables = 1
    #     net.bridge.bridge-nf-call-iptables = 1
    #     EOF
    #     sudo sysctl --system
    #   args:
    #     executable: /bin/bash

    # https://kubernetes.io/docs/setup/production-environment/container-runtimes/#containerd
    - name: "Containerd configure prerequisites"
      ansible.builtin.shell: |
        cat <<EOF | sudo tee /etc/modules-load.d/containerd.conf
        overlay
        br_netfilter
        EOF

        cat <<EOF | sudo tee /etc/sysctl.d/99-kubernetes-cri.conf
        net.bridge.bridge-nf-call-iptables = 1
        net.ipv4.ip_forward = 1
        net.bridge.bridge-nf-call-ip6tables = 1
        EOF
        sudo sysctl --system
      args:
        executable: /bin/bash

    # https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/install-kubeadm/#installing-kubeadm-kubelet-and-kubectl
    - name: "Yum Kubernetes repo"
      ansible.builtin.shell: |
        cat <<EOF | sudo tee /etc/yum.repos.d/kubernetes.repo
        [kubernetes]
        name=Kubernetes
        baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-\$basearch
        enabled=1
        gpgcheck=1
        repo_gpgcheck=1
        gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
        exclude=kubelet kubeadm kubectl
        EOF
      args:
        executable: /bin/bash

    - name: "Install Kubernetes"
      ansible.builtin.command: "yum install -y kubelet kubeadm kubectl --disableexcludes=kubernetes"

    - name: "Enable kubelet service"
      ansible.builtin.systemd:
        name: kubelet
        enabled: yes